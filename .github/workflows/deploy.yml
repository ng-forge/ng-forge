name: Deploy to GitHub Pages

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0, patch, minor, major)'
        required: false
        default: ''
        type: string

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  check-ci:
    name: Check CI Status
    runs-on: ubuntu-latest
    outputs:
      ci-success: ${{ steps.check.outputs.success }}
    steps:
      - name: Check latest CI run
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const { data: runs } = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ci.yml',
              branch: 'main',
              status: 'completed',
              per_page: 1
            });
            
            if (runs.total_count === 0) {
              core.setFailed('No CI runs found');
              return;
            }
            
            const latestRun = runs.workflow_runs[0];
            console.log(`Latest CI run: ${latestRun.conclusion} (${latestRun.html_url})`);
            
            if (latestRun.conclusion === 'success') {
              core.setOutput('success', 'true');
            } else {
              core.setFailed(`Latest CI run failed: ${latestRun.html_url}`);
            }

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: check-ci
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Version bump (if specified)
        if: ${{ github.event.inputs.version != '' }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          pnpm run release:version ${{ github.event.inputs.version }}
          git push --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build libraries
        run: pnpm nx run-many -t build -p dynamic-form,dynamic-form-material
      
      - name: Build documentation
        run: |
          rm -rf dist/ng-doc
          pnpm nx build docs --configuration=production
          ls -la dist/
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/apps/docs/browser
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4