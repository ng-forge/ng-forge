name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Libraries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build libraries
        run: pnpm nx run-many -t build -p dynamic-form,dynamic-form-material

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            dist/packages/dynamic-form
            dist/packages/dynamic-form-material
          key: build-${{ github.sha }}-${{ hashFiles('packages/**') }}
          restore-keys: |
            build-${{ github.sha }}-

  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Restore build artifacts
        uses: actions/cache@v4
        with:
          path: |
            dist/packages/dynamic-form
            dist/packages/dynamic-form-material
          key: build-${{ github.sha }}-${{ hashFiles('packages/**') }}
          restore-keys: |
            build-${{ github.sha }}-

      - name: Lint all projects
        run: pnpm nx run-many -t lint --parallel=3
        continue-on-error: true

      - name: Type check
        run: pnpm nx run-many -t build -p dynamic-form,dynamic-form-material --verbose

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Restore build artifacts
        uses: actions/cache@v4
        with:
          path: |
            dist/packages/dynamic-form
            dist/packages/dynamic-form-material
          key: build-${{ github.sha }}-${{ hashFiles('packages/**') }}
          restore-keys: |
            build-${{ github.sha }}-

      - name: Run tests
        run: pnpm nx run-many -t test --parallel=3 --configuration=ci --coverage
        continue-on-error: true

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage
          flags: unittests
          name: codecov-umbrella
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Restore build artifacts
        uses: actions/cache@v4
        with:
          path: |
            dist/packages/dynamic-form
            dist/packages/dynamic-form-material
          key: build-${{ github.sha }}-${{ hashFiles('packages/**') }}
          restore-keys: |
            build-${{ github.sha }}-

      - name: Build documentation
        run: |
          echo "Building documentation (patch applied via postinstall)..."
          pnpm run build:docs

      - name: Upload docs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-dist
          path: dist/apps/docs/
          retention-days: 7
